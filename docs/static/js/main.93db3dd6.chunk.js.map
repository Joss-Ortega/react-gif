{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cast","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAuBxC,OAER,0BAAMC,SAhBiB,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IAG5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAWd,2BAEEO,KAAK,OACLC,MAAOT,EACPU,SA3BmB,SAACP,GAC3BF,EAAcE,EAAEQ,OAAOF,Y,uBCRbG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,gEAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIAA,EAAUC,OAJV,uBAIZC,EAJY,EAIZA,KAGJC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EAE5B,MAAO,CAEAC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbnB,kBAoBZM,GApBY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAI/B,OACI,6BACI,yBAAKc,UAAW,4DAA2DC,IAAKf,EAAKgB,IAAMN,IAC3F,2BAAIA,KCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFd,SAACA,GAAc,IAAD,EAEfd,mBAAS,CACnCqB,KAAM,GACNa,SAAQ,IAJiC,mBAElCC,EAFkC,KAE3BC,EAF2B,KAwCzC,OA/BAC,qBAAa,WAEbxB,EAAQC,GACPwB,MAAK,SAAAC,GAENC,YAAY,WAERJ,EAAS,CAELf,KAAKkB,EACLL,SAAQ,IAKhBO,QAAQC,IAAIH,KAGV,UAQA,CAACzB,IAKIqB,EDlCwBQ,CAAa7B,GAA/Ba,EAJ4B,EAIlCN,KAAaa,EAJqB,EAIrBA,QAMhB,OACI,oCACA,wBAAIJ,UAAU,uDAAd,IAAsEhB,EAAtE,KAECoB,GAAW,uBAAGJ,UAAU,qDAAb,WAGZ,yBAAKA,UAAW,SAIRH,EAAOJ,KAAI,SAAAC,GAAG,OAElB,kBAAC,EAAD,eACAoB,IAAMpB,EAAIC,IACND,UE1BHqB,EAAe,WAAM,MAKG7C,mBAAS,CAAC,cALb,mBAK1B8C,EAL0B,KAKd/C,EALc,KAY9B,OACI,oCAEJ,4CAEA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAKC,4BAEG+C,EAAWvB,KAAI,SAACT,EAAUiC,GAAX,OACf,kBAAC,EAAD,CAEAH,IAAK9B,EACLA,SAAUA,U,MCzBlBkC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.93db3dd6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('')\r\n    \r\n    const handleInputChange =(e) =>{\r\n   setinputValue(e.target.value);\r\n\r\n    }\r\n\r\n   const handleSubmit =(e) => {\r\n       e.preventDefault();\r\n\r\n       if(inputValue.trim().length >2){\r\n\r\n\r\n        setcategories(cast => [inputValue, ...cast,  ]);\r\n        setinputValue('');\r\n\r\n       }\r\n\r\n   }\r\n\r\n\r\n        return (\r\n        \r\n<form onSubmit={handleSubmit}>\r\n\r\n        <input \r\n          \r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          \r\n       \r\n        />\r\n</form>\r\n      \r\n    \r\n    )\r\n}\r\n\r\n\r\n// AddCategory.PropTypes={\r\n//     setcategories:PropTypes.func.isRequired\r\n// }","export const getGifs = async (category) =>{\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit =10&api_key=ofT2E6KDfZYJ8ix9oBPTbKR620vVvxQz`;\r\n    const respuesta =await fetch(url);\r\n    const {data}=await respuesta.json();\r\n   \r\n \r\n const gifs = data.map(img =>{\r\n \r\n return {\r\n \r\n        id:img.id,\r\n        title:img.title,\r\n        url: img.images?.downsized_medium.url\r\n        \r\n        }\r\n \r\n })\r\n \r\n \r\n    return gifs;\r\n }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <img className ='card animate__animated animate__bounce animate__delay-2s 'src={url} alt ={title}/>\r\n            <p>{title}</p> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n import { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n\r\n\r\nconst {data: images,loading} = useFetchGifs(category);\r\n\r\n\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__bounce animate__delay-2s'> {category} </h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__bounce animate__faster\">Loading</p>}\r\n\r\n        \r\n        <div className ='card '>\r\n            \r\n            {\r\n\r\n                images.map(img =>(\r\n\r\n            <GifGridItem \r\n            key= {img.id}\r\n            {...img}\r\n             />\r\n            \r\n\r\n                ))\r\n            }\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs =(category) => {\r\n\r\nconst [state, setstate] = useState({ \r\ndata: [],\r\nloading:true\r\n});\r\n\r\n\r\n\r\nuseEffect (  ()=>{\r\n\r\ngetGifs(category)\r\n.then(imgs => {\r\n\r\nsetTimeout( () =>{\r\n\r\n    setstate({\r\n\r\n        data:imgs,\r\n        loading:false\r\n        \r\n        \r\n        });\r\n\r\nconsole.log(imgs);\r\n\r\n\r\n},3000);\r\n    \r\n\r\n\r\n\r\n})\r\n\r\n\r\n},[category])\r\n\r\n\r\n\r\n\r\nreturn state; // { data:[] , loading: true}\r\n\r\n}\r\n\r\n\r\n","import React , {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n// const categories=['One Punch', 'Samuria', ' Naruto'];\r\n\r\n\r\n const [categories, setcategories] = useState(['One Punch']);\r\n\r\n// const handleAdd= () => {\r\n// setcategories([...categories,'Hunter' ]);\r\n\r\n// }\r\n\r\n    return (\r\n        <>\r\n            \r\n    <h2>GifExpertApp</h2>\r\n\r\n    <AddCategory setcategories = {setcategories}/>\r\n    <hr />\r\n\r\n    \r\n   \r\n     \r\n     <ol>\r\n        { \r\n        categories.map((category, i) => ( \r\n        <GifGrid\r\n        \r\n        key={category}\r\n        category={category}\r\n        \r\n        />\r\n        )) \r\n        \r\n        }\r\n\r\n     </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}